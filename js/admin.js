// admin.js
const JSON_PATH = '../data/db.json';
let currentEditId = null;

// üß© Hi·ªÉn th·ªã form th√™m s·∫£n ph·∫©m
function showAddProductForm() {
  currentEditId = null;
  document.getElementById('formTitle').innerText = 'Th√™m S·∫£n Ph·∫©m M·ªõi';
  document.getElementById('formProduct').reset();
  document.getElementById('productForm').style.display = 'block';
}

// üß© ·∫®n form
function cancelProductForm() {
  document.getElementById('productForm').style.display = 'none';
  currentEditId = null;
}

// üß© Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
document.addEventListener('DOMContentLoaded', async () => {
  const tbody = document.getElementById('productsTableBody');
  let products = JSON.parse(localStorage.getItem('products') || '[]');

  // N·∫øu ch∆∞a c√≥ d·ªØ li·ªáu th√¨ ƒë·ªçc t·ª´ db.json
  if (!products.length) {
    try {
      const res = await fetch(JSON_PATH);
      const data = await res.json();
      products = data.products || [];
      localStorage.setItem('products', JSON.stringify(products));
    } catch (err) {
      console.error('L·ªói khi t·∫£i d·ªØ li·ªáu:', err);
    }
  }

  renderProducts(products, tbody);
});

// üß© Hi·ªÉn th·ªã s·∫£n ph·∫©m
function renderProducts(products, tbody) {
  tbody.innerHTML = '';
  if (!products.length) {
    tbody.innerHTML =
      '<tr><td colspan="7" style="text-align:center;">Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o</td></tr>';
    return;
  }

  products.forEach((p) => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${p.id}</td>
      <td><img src="${p.image || ''}" width="60" height="60" style="object-fit:cover; border-radius:5px;" onerror="this.src='https://via.placeholder.com/60?text=No+Img'"></td>
      <td>${p.name}</td>
      <td>${formatCurrency(p.price)}</td>
      <td>${p.category}</td>
      <td>${p.stock}</td>
      <td>
        <button onclick="editProduct(${p.id})">‚úèÔ∏è S·ª≠a</button>
        <button onclick="deleteProduct(${p.id})">üóëÔ∏è X√≥a</button>
      </td>
    `;
    tbody.appendChild(tr);
  });
}

// üß© S·ª≠a s·∫£n ph·∫©m
function editProduct(id) {
  const products = JSON.parse(localStorage.getItem('products') || '[]');
  const product = products.find((p) => p.id == id);
  if (!product) return alert('Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m');

  currentEditId = id;
  document.getElementById('formTitle').innerText = 'Ch·ªânh S·ª≠a S·∫£n Ph·∫©m';
  document.getElementById('productForm').style.display = 'block';

  document.getElementById('productId').value = product.id;
  document.getElementById('productName').value = product.name;
  document.getElementById('productPrice').value = product.price;
  document.getElementById('productCategory').value = product.category;
  document.getElementById('productDescription').value = product.description || '';
  document.getElementById('productImage').value = product.image || '';
  document.getElementById('productStock').value = product.stock || '';
}

// üßÆ L·∫•y ID m·ªõi (max + 1)
function getNextProductId(products) {
  if (!products.length) return 1;
  const maxId = Math.max(...products.map((p) => p.id || 0));
  return maxId + 1;
}

// üß© L∆∞u s·∫£n ph·∫©m (th√™m m·ªõi ho·∫∑c c·∫≠p nh·∫≠t)
function saveProduct() {
  const name = document.getElementById('productName').value.trim();
  const price = Number(document.getElementById('productPrice').value);
  const category = document.getElementById('productCategory').value;
  const description = document.getElementById('productDescription').value.trim();
  const image = document.getElementById('productImage').value.trim();
  const stock = Number(document.getElementById('productStock').value);

  if (!name || !price) return alert('‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß t√™n v√† gi√°.');

  let products = JSON.parse(localStorage.getItem('products') || '[]');

  if (currentEditId) {
    // üõ† C·∫≠p nh·∫≠t
    const idx = products.findIndex((p) => p.id == currentEditId);
    if (idx >= 0) {
      products[idx] = {
        ...products[idx],
        name,
        price,
        category,
        description,
        image,
        stock,
      };
      alert('‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m.');
    }
  } else {
    // ‚ûï Th√™m m·ªõi
    const newId = getNextProductId(products);
    products.push({ id: newId, name, price, category, description, image, stock });
    alert('‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m m·ªõi.');
  }

  localStorage.setItem('products', JSON.stringify(products));
  document.getElementById('productForm').style.display = 'none';
  renderProducts(products, document.getElementById('productsTableBody'));
  currentEditId = null;
}

// üóë X√≥a s·∫£n ph·∫©m
function deleteProduct(id) {
  if (!confirm('üóëÔ∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh√¥ng?')) return;
  let products = JSON.parse(localStorage.getItem('products') || '[]');
  products = products.filter((p) => p.id != id);
  localStorage.setItem('products', JSON.stringify(products));
  renderProducts(products, document.getElementById('productsTableBody'));
}

// üí∞ Format ti·ªÅn
function formatCurrency(amount) {
  return Number(amount).toLocaleString('vi-VN', {
    style: 'currency',
    currency: 'VND',
  });
}
