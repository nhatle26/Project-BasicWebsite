// L·∫•y c√°c ph·∫ßn t·ª≠ form
const loginForm = document.getElementById("loginForm");
const registerForm = document.getElementById("registerForm");
const showRegister = document.getElementById("showRegister");
const showLogin = document.getElementById("showLogin");

// ·∫®n hi·ªán form
showRegister.addEventListener("click", (e) => {
  e.preventDefault();
  loginForm.classList.add("hidden");
  registerForm.classList.remove("hidden");
});

showLogin.addEventListener("click", (e) => {
  e.preventDefault();
  registerForm.classList.add("hidden");
  loginForm.classList.remove("hidden");
});

// --- Ki·ªÉm tra ƒë·ªãnh d·∫°ng email ---
function validateEmail(email) {
  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
  return emailRegex.test(email);
}

// --- Ki·ªÉm tra s·ªë ƒëi·ªán tho·∫°i ---
function validatePhone(phone) {
  const phoneRegex = /^[0-9]{10,11}$/;
  return phoneRegex.test(phone);
}

// --- Toggle hi·ªÉn th·ªã m·∫≠t kh·∫©u ---
function togglePassword(inputId) {
  const input = document.getElementById(inputId);
  const icon = input.nextElementSibling;
  if (input.type === "password") {
    input.type = "text";
    icon.classList.replace("fa-eye", "fa-eye-slash");
  } else {
    input.type = "password";
    icon.classList.replace("fa-eye-slash", "fa-eye");
  }
}

// === ƒêƒÇNG NH·∫¨P ===
async function login() {
  const email = document.getElementById("loginEmail").value.trim();
  const password = document.getElementById("loginPassword").value.trim();

  if (!email || !password)
    return alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß email v√† m·∫≠t kh·∫©u!");
  if (!validateEmail(email)) return alert("Email kh√¥ng h·ª£p l·ªá!");

  try {
    const res = await fetch("http://localhost:3000/users");
    const users = await res.json();

    const user = users.find(
      (u) => u.email === email && u.password === password
    );
    if (!user) return alert("Sai email ho·∫∑c m·∫≠t kh·∫©u!");
    if (user.isLocked)
      return alert(
        "T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a. Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n!"
      );

    localStorage.setItem(
      "currentUser",
      JSON.stringify({
        id: user.id,
        email: user.email,
        fullname: user.fullname,
        phone: user.phone,
        role: user.role,
      })
    );

    alert("ƒêƒÉng nh·∫≠p th√†nh c√¥ng!");
    setTimeout(() => {
      window.location.href = user.role === "admin" ? "admin.html" : "home.html";
    }, 1000);
  } catch (err) {
    console.error(err);
    alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!");
  }
}

// === ƒêƒÇNG K√ù ===
async function register() {
  const fullname = document.getElementById("fullname").value.trim();
  const email = document.getElementById("regEmail").value.trim();
  const phone = document.getElementById("regPhone").value.trim();
  const password = document.getElementById("newPassword").value.trim();
  const confirmPassword = document
    .getElementById("confirmPassword")
    .value.trim();

  if (!fullname) return alert("Vui l√≤ng nh·∫≠p h·ªç v√† t√™n!");
  if (!email) return alert("Vui l√≤ng nh·∫≠p email!");
  if (!validateEmail(email)) return alert("Email kh√¥ng h·ª£p l·ªá!");
  if (!phone) return alert("Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i!");
  if (!validatePhone(phone))
    return alert("S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ 10-11 ch·ªØ s·ªë!");
  if (!password) return alert("Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u!");
  if (password.length < 6) return alert("M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!");
  if (!confirmPassword) return alert("Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u!");
  if (password !== confirmPassword)
    return alert("M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!");

  try {
    const res = await fetch("http://localhost:3000/users");
    const users = await res.json();

    if (users.find((u) => u.email === email)) return alert("Email ƒë√£ t·ªìn t·∫°i!");

    const lastId = users.length > 0 ? parseInt(users[users.length - 1].id) : 0;
    const newId = lastId + 1;

    const newUser = {
      id: newId.toString(),
      fullname,
      email,
      password,
      phone,
      role: "user",
      isLocked: false,
    };

    const addRes = await fetch("http://localhost:3000/users", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newUser),
    });

    if (addRes.ok) {
      try {
        await emailjs.send("service_6uulo8x", "template_2zz5xx9", {
          email: newUser.email,
          name: newUser.fullname,
          password: newUser.password,
          from_name: "Datunha",
        });
        alert("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng v√† email ƒë√£ ƒë∆∞·ª£c g·ª≠i!");
      } catch (error) {
        console.error("Email send error:", error);
        alert("ƒêƒÉng k√Ω th√†nh c√¥ng, nh∆∞ng kh√¥ng g·ª≠i ƒë∆∞·ª£c email!");
      }
    } else {
      alert("Kh√¥ng th·ªÉ l∆∞u t√†i kho·∫£n!");
    }
  } catch (err) {
    console.error(err);
    alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi JSON Server!");
  }
}

// --- NgƒÉn chuy·ªÉn trang khi ƒëang test ---
document.addEventListener("DOMContentLoaded", () => {
  // T·∫°m th·ªùi b·ªè redirect t·ª± ƒë·ªông khi test
});
