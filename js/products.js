// js/products.js - L·∫•y d·ªØ li·ªáu s·∫£n ph·∫©m v√† hi·ªÉn th·ªã

// ===== D·ªÆ LI·ªÜU S·∫¢N PH·∫®M =====
// Trong th·ª±c t·∫ø, b·∫°n s·∫Ω l·∫•y t·ª´ API: fetch('http://localhost:3000/products')

const allProducts = [
    { 
        id: 1, 
        name: 'Hoa h·ªìng ƒë·ªè t∆∞∆°i', 
        category: 'hoa', 
        price: 150000, 
        emoji: 'üåπ', 
        stock: 25, 
        description: 'B√≥ hoa h·ªìng ƒë·ªè t∆∞∆°i, tuy·ªát ƒë·∫πp v√† l√£ng m·∫°n. Ph√π h·ª£p t·∫∑ng ng∆∞·ªùi th√¢n, b·∫°n b√® ho·∫∑c ng∆∞·ªùi y√™u.' 
    },
    { 
        id: 2, 
        name: 'Hoa h∆∞·ªõng d∆∞∆°ng', 
        category: 'hoa', 
        price: 120000, 
        emoji: 'üåª', 
        stock: 30, 
        description: 'Hoa h∆∞·ªõng d∆∞∆°ng t∆∞∆°i s√°ng, mang l·∫°i ni·ªÅm vui v√† t√≠ch c·ª±c.' 
    },
    { 
        id: 3, 
        name: 'Hoa tulip', 
        category: 'hoa', 
        price: 180000, 
        emoji: 'üå∑', 
        stock: 15, 
        description: 'Hoa tulip qu√Ω ph√°i v·ªõi nhi·ªÅu m√†u s·∫Øc. Bi·ªÉu t∆∞·ª£ng c·ªßa t√¨nh y√™u.' 
    },
    { 
        id: 4, 
        name: 'Ch·∫≠u g·ªëm tr·∫Øng', 
        category: 'chau', 
        price: 95000, 
        emoji: 'ü™¥', 
        stock: 50, 
        description: 'Ch·∫≠u g·ªëm tr·∫Øng s√°ng tinh t·∫ø, th√≠ch h·ª£p cho t·∫•t c·∫£ c√°c lo·∫°i c√¢y.' 
    },
    { 
        id: 5, 
        name: 'Ch·∫≠u g·ªëm xanh', 
        category: 'chau', 
        price: 110000, 
        emoji: 'ü™¥', 
        stock: 40, 
        description: 'Ch·∫≠u g·ªëm xanh b·∫Øt m·∫Øt, phong c√°ch hi·ªán ƒë·∫°i.' 
    },
    { 
        id: 6, 
        name: 'Ch·∫≠u nh·ª±a ƒë·ªè', 
        category: 'chau', 
        price: 65000, 
        emoji: 'ü™¥', 
        stock: 60, 
        description: 'Ch·∫≠u nh·ª±a ƒë·ªè r·ª±c r·ª°, gi√° r·∫ª v√† b·ªÅn. Nh·∫π v√† d·ªÖ v·∫≠n chuy·ªÉn.' 
    },
    { 
        id: 7, 
        name: 'K√©o c·∫Øt c√†nh', 
        category: 'phu-kien', 
        price: 75000, 
        emoji: '‚úÇÔ∏è', 
        stock: 35, 
        description: 'K√©o c·∫Øt c√†nh ch·∫•t l∆∞·ª£ng cao, l∆∞·ª°i s·∫Øc b√©n.' 
    },
    { 
        id: 8, 
        name: 'Ph√¢n b√≥n h·ªØu c∆°', 
        category: 'phu-kien', 
        price: 85000, 
        emoji: 'üß¥', 
        stock: 45, 
        description: 'Ph√¢n b√≥n h·ªØu c∆° an to√†n, gi√∫p c√¢y ph√°t tri·ªÉn nhanh.' 
    },
    { 
        id: 9, 
        name: 'D√¢y bu·ªôc c√¢y', 
        category: 'phu-kien', 
        price: 25000, 
        emoji: 'üéÄ', 
        stock: 100, 
        description: 'D√¢y bu·ªôc c√¢y m·ªÅm m·∫°i, kh√¥ng l√†m t·ªïn th∆∞∆°ng c√¢y.' 
    },
];

// ===== L·∫§Y T·∫§T C·∫¢ S·∫¢N PH·∫®M =====
function getAllProducts() {
    return allProducts;
}

// ===== L·∫§Y S·∫¢N PH·∫®M THEO ID =====
function getProductById(id) {
    return allProducts.find(p => p.id === parseInt(id));
}

// ===== L∆ØU S·∫¢N PH·∫®M V√ÄO LOCALSTORAGE =====
// D√πng ƒë·ªÉ admin qu·∫£n l√Ω s·∫£n ph·∫©m
function saveProductsToStorage() {
    localStorage.setItem('products', JSON.stringify(allProducts));
}

// ===== T·∫¢I S·∫¢N PH·∫®M T·ª™ LOCALSTORAGE =====
function loadProductsFromStorage() {
    const storedProducts = localStorage.getItem('products');
    if (storedProducts) {
        allProducts.length = 0; // X√≥a m·∫£ng c≈©
        allProducts.push(...JSON.parse(storedProducts)); // Th√™m d·ªØ li·ªáu m·ªõi
    }
}

// ===== RENDER T·∫§T C·∫¢ S·∫¢N PH·∫®M L√äN TRANG CH·ª¶ =====
function renderAllProducts() {
    const container = document.getElementById('productsContainer');
    if (!container) return;

    loadProductsFromStorage(); // Load t·ª´ localStorage n·∫øu c√≥

    if (allProducts.length === 0) {
        container.innerHTML = `
            <div style="grid-column: 1 / -1; text-align: center; padding: 60px; color: #999;">
                <div style="font-size: 80px; margin-bottom: 20px;">üì¶</div>
                <p>Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o</p>
            </div>
        `;
        return;
    }

    container.innerHTML = allProducts.map(product => `
        <div class="product-card">
            <div class="product-image" onclick="viewProduct(${product.id})">
                ${product.emoji}
            </div>
            <div class="product-info">
                <div class="product-name">${product.name}</div>
                <div class="product-price">${product.price.toLocaleString('vi-VN')}ƒë</div>
                <div class="product-buttons">
                    <button class="btn btn-secondary" onclick="viewProduct(${product.id})">Xem</button>
                    <button class="btn btn-primary" onclick="quickAddToCart(${product.id})">Th√™m</button>
                </div>
            </div>
        </div>
    `).join('');
}

// ===== XEM CHI TI·∫æT S·∫¢N PH·∫®M =====
function viewProduct(productId) {
    window.location.href = `product.html?id=${productId}`;
}

// ===== TH√äM NHANH V√ÄO GI·ªé H√ÄNG =====
function quickAddToCart(productId) {
    const product = getProductById(productId);
    if (product && window.cartUtils) {
        window.cartUtils.addToCart(product, 1);
        alert('‚úÖ ƒê√£ th√™m v√†o gi·ªè h√†ng!');
    }
}

// ===== EXPORT ƒê·ªÇ D√ôNG ·ªû C√ÅC FILE KH√ÅC =====
window.productsUtils = {
    getAllProducts,
    getProductById,
    saveProductsToStorage,
    loadProductsFromStorage,
    renderAllProducts
};